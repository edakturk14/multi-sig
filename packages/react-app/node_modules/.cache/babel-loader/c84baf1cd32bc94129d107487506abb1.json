{"ast":null,"code":"var _jsxFileName = \"/Users/edaakturk/Desktop/multi-sig/scaffold-eth/packages/react-app/src/views/Owners.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, DatePicker, Divider, Input, Progress, Slider, Spin, Switch } from \"antd\";\nimport React, { useState } from \"react\";\nimport { utils } from \"ethers\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nimport { Address, Balance, Events } from \"../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Owners({\n  signaturesRequired\n}) {\n  _s();\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 400,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Example UI:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Signatures Required: \", signaturesRequired]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          onChange: e => {\n            setNewPurpose(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 8\n          },\n          onClick: async () => {\n            /* look how you call setPurpose on your contract: */\n\n            /* notice how you pass a call back for tx updates too */\n            const result = tx(writeContracts.MultiSig.setPurpose(newPurpose), update => {\n              console.log(\"📡 Transaction Update:\", update);\n\n              if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\n                console.log(\" ⛽️ \" + update.gasUsed + \"/\" + (update.gasLimit || update.gas) + \" @ \" + parseFloat(update.gasPrice) / 1000000000 + \" gwei\");\n              }\n            });\n            console.log(\"awaiting metamask/web3 confirm result...\", result);\n            console.log(await result);\n          },\n          children: \"Set Purpose!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \"Your Address:\", /*#__PURE__*/_jsxDEV(Address, {\n        address: address,\n        ensProvider: mainnetProvider,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \"ENS Address Example:\", /*#__PURE__*/_jsxDEV(Address, {\n        address: \"0x34aA3F359A9D614239015126635CE7732c18fDF3\"\n        /* this will show as austingriffith.eth */\n        ,\n        ensProvider: mainnetProvider,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Balance: \", yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        address: address,\n        provider: localProvider,\n        price: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uD83D\\uDC33 Example Whale Balance:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        balance: utils.parseEther(\"1000\"),\n        provider: localProvider,\n        price: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Balance: \", yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \"Your Contract Address:\", /*#__PURE__*/_jsxDEV(Address, {\n        address: readContracts && readContracts.YourContract ? readContracts.YourContract.address : null,\n        ensProvider: mainnetProvider,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            /* look how you call setPurpose on your contract: */\n            tx(writeContracts.YourContract.setPurpose(\"🍻 Cheers\"));\n          },\n          children: \"Set Purpose to \\\"\\uD83C\\uDF7B Cheers\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            /*\n            you can also just craft a transaction and send it to the tx() transactor\n            here we are sending value straight to the contract's address:\n            */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: utils.parseEther(\"0.001\")\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          },\n          children: \"Send Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            /* look how we call setPurpose AND send some value along */\n            tx(writeContracts.YourContract.setPurpose(\"💵 Paying for this one!\", {\n              value: utils.parseEther(\"0.001\")\n            }));\n            /* this will fail until you make the setPurpose function payable */\n          },\n          children: \"Set Purpose With Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            /* you can also just craft a transaction and send it to the tx() transactor */\n            tx({\n              to: writeContracts.YourContract.address,\n              value: utils.parseEther(\"0.001\"),\n              data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\"🤓 Whoa so 1337!\"])\n            });\n            /* this should throw an error about \"no fallback nor receive function\" until you add it */\n          },\n          children: \"Another Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Events, {\n      contracts: readContracts,\n      contractName: \"YourContract\",\n      eventName: \"SetPurpose\",\n      localProvider: localProvider,\n      mainnetProvider: mainnetProvider,\n      startBlock: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 600,\n        margin: \"auto\",\n        marginTop: 32,\n        paddingBottom: 256\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: [\"Check out all the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"\\uD83D\\uDCE6 components\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          marginTop: 32\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"There are tons of generic components included from\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://ant.design/components/overview/\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"\\uD83D\\uDC1C ant.design\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), \" \", \"too!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Buttons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: [/*#__PURE__*/_jsxDEV(SyncOutlined, {\n            spin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), \" Icons\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 8\n          },\n          children: [\"Date Pickers?\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            range: true,\n            defaultValue: [20, 50],\n            onChange: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            defaultChecked: true,\n            onChange: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Progress, {\n            percent: 50,\n            status: \"active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 32\n          },\n          children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Owners, \"rNqHygrJpXPt1ESBlfztAdtp7Dg=\");\n\n_c = Owners;\n\nvar _c;\n\n$RefreshReg$(_c, \"Owners\");","map":{"version":3,"sources":["/Users/edaakturk/Desktop/multi-sig/scaffold-eth/packages/react-app/src/views/Owners.jsx"],"names":["Button","Card","DatePicker","Divider","Input","Progress","Slider","Spin","Switch","React","useState","utils","SyncOutlined","Address","Balance","Events","Owners","signaturesRequired","newPurpose","setNewPurpose","border","padding","width","margin","marginTop","e","target","value","result","tx","writeContracts","MultiSig","setPurpose","update","console","log","status","hash","gasUsed","gasLimit","gas","parseFloat","gasPrice","address","mainnetProvider","yourLocalBalance","formatEther","localProvider","price","parseEther","readContracts","YourContract","to","data","interface","encodeFunctionData","paddingBottom"],"mappings":"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","sourcesContent":["import { Button, Card, DatePicker, Divider, Input, Progress, Slider, Spin, Switch } from \"antd\";\nimport React, { useState } from \"react\";\nimport { utils } from \"ethers\";\nimport { SyncOutlined } from \"@ant-design/icons\";\n\nimport { Address, Balance, Events } from \"../components\";\n\nexport default function Owners({\n  signaturesRequired,\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\n        <h2>Example UI:</h2>\n        <h4>Signatures Required: {signaturesRequired}</h4>\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            style={{ marginTop: 8 }}\n            onClick={async () => {\n              /* look how you call setPurpose on your contract: */\n              /* notice how you pass a call back for tx updates too */\n              const result = tx(writeContracts.MultiSig.setPurpose(newPurpose), update => {\n                console.log(\"📡 Transaction Update:\", update);\n                if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                  console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\n                  console.log(\n                    \" ⛽️ \" +\n                      update.gasUsed +\n                      \"/\" +\n                      (update.gasLimit || update.gas) +\n                      \" @ \" +\n                      parseFloat(update.gasPrice) / 1000000000 +\n                      \" gwei\",\n                  );\n                }\n              });\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\n              console.log(await result);\n            }}\n          >\n            Set Purpose!\n          </Button>\n        </div>\n        <Divider />\n        Your Address:\n        <Address address={address} ensProvider={mainnetProvider} fontSize={16} />\n        <Divider />\n        ENS Address Example:\n        <Address\n          address=\"0x34aA3F359A9D614239015126635CE7732c18fDF3\" /* this will show as austingriffith.eth */\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <div>OR</div>\n        <Balance address={address} provider={localProvider} price={price} />\n        <Divider />\n        <div>🐳 Example Whale Balance:</div>\n        <Balance balance={utils.parseEther(\"1000\")} provider={localProvider} price={price} />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <Divider />\n        Your Contract Address:\n        <Address\n          address={readContracts && readContracts.YourContract ? readContracts.YourContract.address : null}\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how you call setPurpose on your contract: */\n              tx(writeContracts.YourContract.setPurpose(\"🍻 Cheers\"));\n            }}\n          >\n            Set Purpose to &quot;🍻 Cheers&quot;\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Send Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how we call setPurpose AND send some value along */\n              tx(\n                writeContracts.YourContract.setPurpose(\"💵 Paying for this one!\", {\n                  value: utils.parseEther(\"0.001\"),\n                }),\n              );\n              /* this will fail until you make the setPurpose function payable */\n            }}\n          >\n            Set Purpose With Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* you can also just craft a transaction and send it to the tx() transactor */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n                data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\n                  \"🤓 Whoa so 1337!\",\n                ]),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Another Example\n          </Button>\n        </div>\n      </div>\n\n      {/*\n        📑 Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <Events\n        contracts={readContracts}\n        contractName=\"YourContract\"\n        eventName=\"SetPurpose\"\n        localProvider={localProvider}\n        mainnetProvider={mainnetProvider}\n        startBlock={1}\n      />\n\n      <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 256 }}>\n        <Card>\n          Check out all the{\" \"}\n          <a\n            href=\"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            📦 components\n          </a>\n        </Card>\n\n        <Card style={{ marginTop: 32 }}>\n          <div>\n            There are tons of generic components included from{\" \"}\n            <a href=\"https://ant.design/components/overview/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              🐜 ant.design\n            </a>{\" \"}\n            too!\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <Button type=\"primary\">Buttons</Button>\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <SyncOutlined spin /> Icons\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            Date Pickers?\n            <div style={{ marginTop: 2 }}>\n              <DatePicker onChange={() => {}} />\n            </div>\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Slider range defaultValue={[20, 50]} onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Switch defaultChecked onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Progress percent={50} status=\"active\" />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Spin />\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}