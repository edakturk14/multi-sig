{"ast":null,"code":"var _jsxFileName = \"/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/components/WalletConnectInput.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Input, Badge } from \"antd\";\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QrReader from \"react-qr-reader\";\nimport { React, useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { parseExternalContractTransaction } from \"../helpers\";\nimport TransactionDetailsModal from \"./MultiSig/TransactionDetailsModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WalletConnectInput = ({\n  chainId,\n  address,\n  loadWalletConnectData,\n  mainnetProvider,\n  price\n}) => {\n  _s();\n\n  const [walletConnectConnector, setWalletConnectConnector] = useLocalStorage(\"walletConnectConnector\");\n  const [wallectConnectConnectorSession, setWallectConnectConnectorSession] = useLocalStorage(\"wallectConnectConnectorSession\");\n  const [walletConnectUri, setWalletConnectUri] = useLocalStorage(\"walletConnectUri\", \"\");\n  const [isConnected, setIsConnected] = useLocalStorage(\"isConnected\", false);\n  const [peerMeta, setPeerMeta] = useLocalStorage(\"peerMeta\");\n  const [data, setData] = useState();\n  const [to, setTo] = useState();\n  const [value, setValue] = useState();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [parsedTransactionData, setParsedTransactionData] = useState();\n  const [scan, setScan] = useState(false);\n  useEffect(() => {\n    if (walletConnectUri) {\n      setupAndSubscribe();\n    }\n  }, [walletConnectUri]);\n  useEffect(() => {\n    if (address && !isConnected) {\n      resetConnection();\n    }\n  }, [address], isConnected);\n\n  const setupAndSubscribe = () => {\n    const connector = setupConnector();\n\n    if (connector) {\n      subscribeToEvents(connector);\n      setWalletConnectConnector(connector);\n    }\n  };\n\n  const setupConnector = () => {\n    console.log(\" ðŸ“¡ Connecting to Wallet Connect....\", walletConnectUri);\n    let connector;\n\n    try {\n      connector = new WalletConnect({\n        uri: walletConnectUri\n      }); // return connector;\n    } catch (error) {\n      console.error(\"setupConnector error:\", error);\n      localStorage.removeItem(\"walletConnectUri\");\n      setWalletConnectUri(\"\");\n      return;\n    }\n\n    setWalletConnectConnector(connector);\n    return connector;\n  };\n\n  const subscribeToEvents = connector => {\n    connector.on(\"session_request\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      console.log(\"Event: session_request\", payload);\n      setPeerMeta(payload.params[0].peerMeta);\n      connector.approveSession({\n        accounts: [address],\n        chainId\n      });\n\n      if (connector.connected) {\n        setIsConnected(true);\n        console.log(\"Session successfully connected.\");\n      }\n    }); //\n\n    connector.on(\"call_request\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      console.log(\"Event: call_request\", payload);\n      parseCallRequest(payload);\n    }); //\n\n    connector.on(\"disconnect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      console.log(\"Event: disconnect\", payload);\n      resetConnection();\n    });\n  }; //\n\n\n  useEffect(() => {\n    if (!isConnected) {\n      let nextSession = localStorage.getItem(\"wallectConnectNextSession\");\n\n      if (nextSession) {\n        localStorage.removeItem(\"wallectConnectNextSession\");\n        console.log(\"FOUND A NEXT SESSION IN CACHE\");\n        console.log(\"this is the\", nextSession);\n        setWalletConnectUri(nextSession);\n      } else if (walletConnectConnector) {\n        console.log(\"NOT CONNECTED AND walletConnectConnector\", walletConnectConnector);\n        setupConnector(walletConnectConnector);\n        setIsConnected(true);\n      } else if (walletConnectUri\n      /*&&!walletConnectUriSaved*/\n      ) {\n        //CLEAR LOCAL STORAGE?!?\n        console.log(\" old uri was\", walletConnectUri);\n        console.log(\"clear local storage and connect...\", nextSession);\n        localStorage.removeItem(\"walletconnect\"); // lololol\n\n        setupConnector({\n          // Required\n          uri: walletConnectUri // Required\n\n        }\n        /*,\n          {\n            // Optional\n            url: \"<YOUR_PUSH_SERVER_URL>\",\n            type: \"fcm\",\n            token: token,\n            peerMeta: true,\n            language: language,\n          }*/\n        );\n      }\n    }\n  }, [walletConnectUri]);\n\n  const parseCallRequest = payload => {\n    const callData = payload.params[0];\n    setValue(callData.value);\n    setTo(callData.to);\n    setData(callData.data);\n  }; //\n\n\n  useEffect(() => {\n    if (data && to) {\n      decodeFunctionData();\n    }\n  }, [data]); //\n\n  const decodeFunctionData = async () => {\n    try {\n      const parsedTransactionData = await parseExternalContractTransaction(to, data);\n      setParsedTransactionData(parsedTransactionData);\n      setIsModalVisible(true);\n    } catch (error) {\n      console.log(error);\n      setParsedTransactionData(null);\n    }\n  }; //\n\n\n  const killSession = () => {\n    console.log(\"ACTION\", \"killSession\");\n\n    if (isConnected) {\n      walletConnectConnector.killSession();\n    }\n\n    resetConnection();\n    localStorage.removeItem(\"walletconnect\");\n    localStorage.removeItem(\"walletConnectUri\");\n    localStorage.removeItem(\"walletConnectConnector\");\n    localStorage.setItem(\"wallectConnectNextSession\", walletConnectUri);\n    console.log(\"the connection was reset\");\n    setTimeout(() => {\n      window.location.reload(true);\n    }, 500);\n  }; //\n\n\n  const hideModal = () => setIsModalVisible(false);\n\n  const handleOk = () => {\n    loadWalletConnectData({\n      data,\n      to,\n      value\n    });\n  };\n\n  const resetConnection = () => {\n    setWalletConnectUri(\"\");\n    setIsConnected(false);\n    setWalletConnectConnector(null);\n    setData();\n    setValue();\n    setTo();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [scan ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: 256,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\"\n      },\n      onClick: () => {\n        setScan(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 250,\n        resolution: 1200,\n        onError: e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n        },\n        onScan: newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\", newValue);\n            setScan(false);\n            setWalletConnectUri(newValue);\n          }\n        },\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Input.Group, {\n      compact: true,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"calc(100% - 31px)\",\n          marginBottom: 20\n        },\n        placeholder: \"Paste WalletConnect URI\",\n        disabled: isConnected,\n        value: walletConnectUri,\n        onChange: e => setWalletConnectUri(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isConnected,\n        onClick: () => setScan(!scan),\n        icon: /*#__PURE__*/_jsxDEV(Badge, {\n          count: /*#__PURE__*/_jsxDEV(CameraOutlined, {\n            style: {\n              fontSize: 9\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 27\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(QrcodeOutlined, {\n            style: {\n              fontSize: 18\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), isConnected && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: peerMeta.icons[0],\n          style: {\n            width: 25,\n            height: 25\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: peerMeta.url,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: peerMeta.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: killSession,\n        type: \"primary\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => {\n        localStorage.removeItem(\"walletconnect\");\n        setTimeout(() => {\n          window.location.reload(true);\n        }, 500);\n      },\n      children: \"\\uD83D\\uDDD1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), isModalVisible && /*#__PURE__*/_jsxDEV(TransactionDetailsModal, {\n      visible: isModalVisible,\n      txnInfo: parsedTransactionData,\n      handleOk: handleOk,\n      handleCancel: hideModal,\n      showFooter: true,\n      mainnetProvider: mainnetProvider,\n      price: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WalletConnectInput, \"OhtJYAQjMoJBbMUWb7t8lQM2Z3w=\", false, function () {\n  return [useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage, useLocalStorage];\n});\n\n_c = WalletConnectInput;\nexport default WalletConnectInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletConnectInput\");","map":{"version":3,"sources":["/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/components/WalletConnectInput.jsx"],"names":["Button","Input","Badge","CameraOutlined","QrcodeOutlined","WalletConnect","QrReader","React","useState","useEffect","useLocalStorage","parseExternalContractTransaction","TransactionDetailsModal","WalletConnectInput","chainId","address","loadWalletConnectData","mainnetProvider","price","walletConnectConnector","setWalletConnectConnector","wallectConnectConnectorSession","setWallectConnectConnectorSession","walletConnectUri","setWalletConnectUri","isConnected","setIsConnected","peerMeta","setPeerMeta","data","setData","to","setTo","value","setValue","isModalVisible","setIsModalVisible","parsedTransactionData","setParsedTransactionData","scan","setScan","setupAndSubscribe","resetConnection","connector","setupConnector","subscribeToEvents","console","log","uri","error","localStorage","removeItem","on","payload","params","approveSession","accounts","connected","parseCallRequest","nextSession","getItem","callData","decodeFunctionData","killSession","setItem","setTimeout","window","location","reload","hideModal","handleOk","zIndex","position","left","top","width","e","newValue","marginBottom","target","fontSize","marginTop","icons","height","url","cursor"],"mappings":"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","sourcesContent":["import { Button, Input, Badge } from \"antd\";\nimport { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport WalletConnect from \"@walletconnect/client\";\nimport QrReader from \"react-qr-reader\";\nimport { React, useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../hooks\";\nimport { parseExternalContractTransaction } from \"../helpers\";\nimport TransactionDetailsModal from \"./MultiSig/TransactionDetailsModal\";\n\nconst WalletConnectInput = ({ chainId, address, loadWalletConnectData, mainnetProvider, price }) => {\n  const [walletConnectConnector, setWalletConnectConnector] = useLocalStorage(\"walletConnectConnector\");\n  const [wallectConnectConnectorSession, setWallectConnectConnectorSession] = useLocalStorage(\n    \"wallectConnectConnectorSession\",\n  );\n  const [walletConnectUri, setWalletConnectUri] = useLocalStorage(\"walletConnectUri\", \"\");\n  const [isConnected, setIsConnected] = useLocalStorage(\"isConnected\", false);\n  const [peerMeta, setPeerMeta] = useLocalStorage(\"peerMeta\");\n  const [data, setData] = useState();\n  const [to, setTo] = useState();\n  const [value, setValue] = useState();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [parsedTransactionData, setParsedTransactionData] = useState();\n  const [scan, setScan] = useState(false);\n\n  useEffect(() => {\n    if (walletConnectUri) {\n      setupAndSubscribe();\n    }\n  }, [walletConnectUri]);\n\n  useEffect(() => {\n    if (address && !isConnected) {\n      resetConnection();\n    }\n  }, [address], isConnected);\n\n  const setupAndSubscribe = () => {\n    const connector = setupConnector();\n    if (connector) {\n      subscribeToEvents(connector);\n      setWalletConnectConnector(connector);\n    }\n  };\n\n  const setupConnector = () => {\n    console.log(\" ðŸ“¡ Connecting to Wallet Connect....\", walletConnectUri);\n    let connector;\n    try {\n      connector = new WalletConnect({ uri: walletConnectUri });\n      // return connector;\n    } catch (error) {\n      console.error(\"setupConnector error:\", error);\n      localStorage.removeItem(\"walletConnectUri\");\n      setWalletConnectUri(\"\");\n      return;\n    }\n    setWalletConnectConnector(connector);\n    return connector;\n  };\n\n  const subscribeToEvents = connector => {\n    connector.on(\"session_request\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      console.log(\"Event: session_request\", payload);\n      setPeerMeta(payload.params[0].peerMeta);\n\n      connector.approveSession({\n        accounts: [address],\n        chainId,\n      });\n\n      if (connector.connected) {\n        setIsConnected(true);\n        console.log(\"Session successfully connected.\");\n      }\n    });\n    //\n    connector.on(\"call_request\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      console.log(\"Event: call_request\", payload);\n      parseCallRequest(payload);\n    });\n    //\n\n    connector.on(\"disconnect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n\n      console.log(\"Event: disconnect\", payload);\n      resetConnection();\n    });\n  };\n  //\n  useEffect(() => {\n    if (!isConnected) {\n      let nextSession = localStorage.getItem(\"wallectConnectNextSession\");\n      if (nextSession) {\n        localStorage.removeItem(\"wallectConnectNextSession\");\n        console.log(\"FOUND A NEXT SESSION IN CACHE\");\n        console.log(\"this is the\", nextSession);\n        setWalletConnectUri(nextSession);\n      } else if (walletConnectConnector) {\n        console.log(\"NOT CONNECTED AND walletConnectConnector\", walletConnectConnector);\n        setupConnector(walletConnectConnector);\n        setIsConnected(true);\n      } else if (walletConnectUri /*&&!walletConnectUriSaved*/) {\n        //CLEAR LOCAL STORAGE?!?\n        console.log(\" old uri was\", walletConnectUri);\n        console.log(\"clear local storage and connect...\", nextSession);\n        localStorage.removeItem(\"walletconnect\"); // lololol\n        setupConnector(\n          {\n            // Required\n            uri: walletConnectUri,\n            // Required\n          } /*,\n              {\n                // Optional\n                url: \"<YOUR_PUSH_SERVER_URL>\",\n                type: \"fcm\",\n                token: token,\n                peerMeta: true,\n                language: language,\n              }*/,\n        );\n      }\n    }\n  }, [walletConnectUri]);\n\n  const parseCallRequest = payload => {\n    const callData = payload.params[0];\n    setValue(callData.value);\n    setTo(callData.to);\n    setData(callData.data);\n  };\n  //\n\n  useEffect(() => {\n    if (data && to) {\n      decodeFunctionData();\n    }\n  }, [data]);\n  //\n\n  const decodeFunctionData = async () => {\n    try {\n      const parsedTransactionData = await parseExternalContractTransaction(to, data);\n      setParsedTransactionData(parsedTransactionData);\n      setIsModalVisible(true);\n    } catch (error) {\n      console.log(error);\n      setParsedTransactionData(null);\n    }\n  };\n  //\n\n  const killSession = () => {\n    console.log(\"ACTION\", \"killSession\");\n    if (isConnected) {\n      walletConnectConnector.killSession();\n    }\n    resetConnection();\n    localStorage.removeItem(\"walletconnect\");\n    localStorage.removeItem(\"walletConnectUri\");\n    localStorage.removeItem(\"walletConnectConnector\");\n    localStorage.setItem(\"wallectConnectNextSession\", walletConnectUri);\n    console.log(\"the connection was reset\");\n    setTimeout(() => {\n      window.location.reload(true);\n    }, 500);\n  };\n  //\n\n  const hideModal = () => setIsModalVisible(false);\n\n  const handleOk = () => {\n    loadWalletConnectData({\n      data,\n      to,\n      value,\n    });\n  };\n\n  const resetConnection = () => {\n    setWalletConnectUri(\"\");\n    setIsConnected(false);\n    setWalletConnectConnector(null);\n    setData();\n    setValue();\n    setTo();\n  };\n\n  return (\n    <>\n      {scan ? (\n        <div\n          style={{\n            zIndex: 256,\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n          }}\n          onClick={() => {\n            setScan(false);\n          }}\n        >\n          <QrReader\n            delay={250}\n            resolution={1200}\n            onError={e => {\n              console.log(\"SCAN ERROR\", e);\n              setScan(false);\n            }}\n            onScan={newValue => {\n              if (newValue) {\n                console.log(\"SCAN VALUE\", newValue);\n                setScan(false);\n                setWalletConnectUri(newValue);\n              }\n            }}\n            style={{ width: \"100%\" }}\n          />\n        </div>\n      ) : (\n        \"\"\n      )}\n\n      <Input.Group compact>\n        <Input\n          style={{ width: \"calc(100% - 31px)\", marginBottom: 20 }}\n          placeholder=\"Paste WalletConnect URI\"\n          disabled={isConnected}\n          value={walletConnectUri}\n          onChange={e => setWalletConnectUri(e.target.value)}\n        />\n        <Button\n          disabled={isConnected}\n          onClick={() => setScan(!scan)}\n          icon={\n            <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n              <QrcodeOutlined style={{ fontSize: 18 }} />\n            </Badge>\n          }\n        />\n      </Input.Group>\n\n      {isConnected && (\n        <>\n          <div style={{ marginTop: 10 }}>\n            <img src={peerMeta.icons[0]} style={{ width: 25, height: 25 }} />\n            <p>\n              <a href={peerMeta.url} target=\"_blank\" rel=\"noreferrer\">\n                {peerMeta.url}\n              </a>\n            </p>\n          </div>\n          <Button onClick={killSession} type=\"primary\">\n            Disconnect\n          </Button>\n        </>\n      )}\n\n      {!isConnected && (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={() => {\n            localStorage.removeItem(\"walletconnect\");\n            setTimeout(() => {\n              window.location.reload(true);\n            }, 500);\n          }}\n        >\n          ðŸ—‘\n        </div>\n      )}\n\n      {isModalVisible && (\n        <TransactionDetailsModal\n          visible={isModalVisible}\n          txnInfo={parsedTransactionData}\n          handleOk={handleOk}\n          handleCancel={hideModal}\n          showFooter={true}\n          mainnetProvider={mainnetProvider}\n          price={price}\n        />\n      )}\n    </>\n  );\n};\nexport default WalletConnectInput;"]},"metadata":{},"sourceType":"module"}