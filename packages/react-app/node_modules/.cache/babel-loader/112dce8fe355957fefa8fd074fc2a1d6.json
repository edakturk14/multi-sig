{"ast":null,"code":"var _jsxFileName = \"/Users/edaakturk/Desktop/multi-sig/scaffold-eth/packages/react-app/src/views/CreateTransaction.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Select, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput, Balance, EtherInput, Blockie } from \"../components\";\nimport { useContractReader, useEventListener } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst axios = require(\"axios\");\n\nexport default function CreateTransaction({\n  poolServerUrl,\n  contractName,\n  address,\n  setRoute,\n  userProvider,\n  mainnetProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts\n}) {\n  _s();\n\n  const history = useHistory(); // keep track of a variable from the contract in the local React state:\n\n  const nonce = useContractReader(readContracts, contractName, \"nonce\");\n  const calldataInputRef = useRef(\"0x\");\n  console.log(\"🤗 nonce:\", nonce);\n  console.log(\"price\", price);\n  const [customNonce, setCustomNonce] = useState();\n  const [to, setTo] = useLocalStorage(\"to\");\n  const [amount, setAmount] = useLocalStorage(\"amount\", \"0\");\n  const [data, setData] = useLocalStorage(\"data\", \"0x\");\n  const [isCreateTxnEnabled, setCreateTxnEnabled] = useState(true);\n  const [decodedDataState, setDecodedData] = useState();\n  const [methodName, setMethodName] = useState();\n  const [selectDisabled, setSelectDisabled] = useState(false);\n  let decodedData = \"\";\n  const [result, setResult] = useState();\n  const inputStyle = {\n    padding: 10\n  };\n  let decodedDataObject = \"\";\n  useEffect(() => {\n    const inputTimer = setTimeout(async () => {\n      console.log(\"EFFECT RUNNING\");\n\n      try {\n        // if(methodName == \"transferFunds\"){\n        //   console.log(\"Send transaction selected\")\n        //   console.log(\"🔥🔥🔥🔥🔥🔥\",amount)\n        //     const calldata = readContracts[contractName].interface.encodeFunctionData(\"transferFunds\",[to,parseEther(\"\" + parseFloat(amount).toFixed(12))])\n        //     setData(calldata);\n        // }\n        // decodedDataObject = readContracts ? await readContracts[contractName].interface.parseTransaction({ data }) : \"\";\n        // console.log(\"decodedDataObject\", decodedDataObject);\n        // setCreateTxnEnabled(true);\n        if (decodedDataObject.signature === \"addSigner(address,uint256)\") {\n          setMethodName(\"addSigner\");\n          setSelectDisabled(true);\n        } else if (decodedDataObject.signature === \"removeSigner(address,uint256)\") {\n          setMethodName(\"removeSigner\");\n          setSelectDisabled(true);\n        }\n\n        decodedData = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"left\",\n              marginTop: 16,\n              marginBottom: 16\n            },\n            children: [decodedDataObject && decodedDataObject.signature && /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Function Signature : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 68\n            }, this), decodedDataObject.signature]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), decodedDataObject.functionFragment && decodedDataObject.functionFragment.inputs.map((element, index) => {\n            if (element.type === \"address\") {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"left\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [element.name, \" :\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Address, {\n                  fontSize: 16,\n                  address: decodedDataObject.args[index],\n                  ensProvider: mainnetProvider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this);\n            }\n\n            if (element.type === \"uint256\") {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"left\"\n                },\n                children: element.name === \"value\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [element.name, \" : \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 49\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(Balance, {\n                    fontSize: 16,\n                    balance: decodedDataObject.args[index],\n                    dollarMultiplier: price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 74\n                  }, this), \" \"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: [element.name, \" : \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 173\n                  }, this), \" \", decodedDataObject.args[index] && decodedDataObject.args[index].toNumber()]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this);\n        setDecodedData(decodedData);\n        setCreateTxnEnabled(true);\n        setResult();\n      } catch (error) {\n        console.log(\"mistake: \", error);\n        if (data !== \"0x\") setResult(\"ERROR: Invalid calldata\");\n        setCreateTxnEnabled(false);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(inputTimer);\n    };\n  }, [data, decodedData, amount]);\n  let resultDisplay;\n\n  if (result) {\n    if (result.indexOf(\"ERROR\") >= 0) {\n      resultDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 16,\n          padding: 8,\n          color: \"red\"\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }, this);\n    } else {\n      resultDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 16,\n          padding: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Blockie, {\n          size: 4,\n          scale: 8,\n          address: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \" Tx \", result.substr(0, 6), \" Created!\", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: 8,\n            padding: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #cccccc\",\n        padding: 16,\n        width: 400,\n        margin: \"auto\",\n        marginTop: 64\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputStyle,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: \"#\",\n            disabled: true,\n            value: customNonce,\n            placeholder: \"\" + (nonce ? nonce.toNumber() : \"loading...\"),\n            onChange: setCustomNonce\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: 8,\n            padding: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            value: methodName,\n            disabled: selectDisabled,\n            style: {\n              width: \"100%\"\n            },\n            onChange: setMethodName,\n            children: [\"//\", /*#__PURE__*/_jsxDEV(Option, {\n              children: \"transferFunds()\"\n            }, \"transferFunds\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              disabled: true,\n              children: \"addSigner()\"\n            }, \"addSigner\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              disabled: true,\n              children: \"removeSigner()\"\n            }, \"removeSigner\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputStyle,\n          children: /*#__PURE__*/_jsxDEV(AddressInput, {\n            autoFocus: true,\n            ensProvider: mainnetProvider,\n            placeholder: \"to address\",\n            value: to,\n            onChange: setTo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), !selectDisabled && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputStyle,\n          children: /*#__PURE__*/_jsxDEV(EtherInput, {\n            price: price,\n            mode: \"USD\",\n            value: amount,\n            onChange: setAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: inputStyle,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"calldata\",\n            value: data,\n            onChange: e => {\n              setData(e.target.value);\n            },\n            ref: calldataInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), decodedDataState]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 32\n          },\n          disabled: !isCreateTxnEnabled,\n          onClick: async () => {\n            // setData(calldataInputRef.current.state.value)\n            // if (data && data == \"0x\") {\n            //   setResult(\"ERROR, Call Data Invalid\");\n            //   return;\n            // }\n            console.log(\"customNonce\", customNonce);\n            const nonce = customNonce || (await readContracts[contractName].nonce());\n            console.log(\"nonce\", nonce);\n            const newHash = await readContracts[contractName].getTransactionHash(nonce, to, parseEther(\"\" + parseFloat(amount).toFixed(12)), data);\n            console.log(\"newHash\", newHash);\n            const signature = await userProvider.send(\"personal_sign\", [newHash, address]);\n            console.log(\"signature\", signature);\n            const recover = await readContracts[contractName].recover(newHash, signature);\n            console.log(\"recover\", recover);\n            const isOwner = await readContracts[contractName].isOwner(recover);\n            console.log(\"isOwner\", isOwner);\n\n            if (isOwner) {\n              const res = await axios.post(poolServerUrl, {\n                chainId: localProvider._network.chainId,\n                address: readContracts[contractName].address,\n                nonce: nonce.toNumber(),\n                to,\n                amount,\n                data,\n                hash: newHash,\n                signatures: [signature],\n                signers: [recover]\n              }); // IF SIG IS VALUE ETC END TO SERVER AND SERVER VERIFIES SIG IS RIGHT AND IS SIGNER BEFORE ADDING TY\n\n              console.log(\"RESULT\", res.data);\n              setTimeout(() => {\n                history.push(\"/pool\");\n              }, 2777);\n              setResult(res.data.hash);\n              setTo();\n              setAmount(\"0\");\n              setData(\"0x\");\n            } else {\n              console.log(\"ERROR, NOT OWNER.\");\n              setResult(\"ERROR, NOT OWNER.\");\n            }\n          },\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), resultDisplay]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateTransaction, \"tdvzw4VF1OqatX409Ks7g2qqjZQ=\", false, function () {\n  return [useHistory, useContractReader, useLocalStorage, useLocalStorage, useLocalStorage];\n});\n\n_c = CreateTransaction;\n\nfunction useLocalStorage(key, initialValue) {\n  _s2();\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  }); // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n      setStoredValue(valueToStore); // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n_s2(useLocalStorage, \"5hTcIUUhXmZZwkA5OW+zhuKtKjI=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTransaction\");","map":{"version":3,"sources":["/Users/edaakturk/Desktop/multi-sig/scaffold-eth/packages/react-app/src/views/CreateTransaction.jsx"],"names":["React","useCallback","useEffect","useState","useRef","useHistory","Button","Select","List","Divider","Input","Card","DatePicker","Slider","Switch","Progress","Spin","SyncOutlined","parseEther","formatEther","Address","AddressInput","Balance","EtherInput","Blockie","useContractReader","useEventListener","Option","axios","require","CreateTransaction","poolServerUrl","contractName","address","setRoute","userProvider","mainnetProvider","localProvider","yourLocalBalance","price","tx","readContracts","writeContracts","history","nonce","calldataInputRef","console","log","customNonce","setCustomNonce","to","setTo","useLocalStorage","amount","setAmount","data","setData","isCreateTxnEnabled","setCreateTxnEnabled","decodedDataState","setDecodedData","methodName","setMethodName","selectDisabled","setSelectDisabled","decodedData","result","setResult","inputStyle","padding","decodedDataObject","inputTimer","setTimeout","signature","display","flexDirection","alignItems","justifyContent","marginTop","marginBottom","functionFragment","inputs","map","element","index","type","name","args","toNumber","error","clearTimeout","resultDisplay","indexOf","margin","color","substr","border","width","e","target","value","newHash","getTransactionHash","parseFloat","toFixed","send","recover","isOwner","res","post","chainId","_network","hash","signatures","signers","push","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","setValue","valueToStore","Function","setItem","stringify"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Select, List, Divider, Input, Card, DatePicker, Slider, Switch, Progress, Spin } from \"antd\";\nimport { SyncOutlined } from \"@ant-design/icons\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { Address, AddressInput, Balance, EtherInput, Blockie } from \"../components\";\nimport { useContractReader, useEventListener } from \"../hooks\";\nconst { Option } = Select;\n\nconst axios = require(\"axios\");\n\nexport default function CreateTransaction({\n  poolServerUrl,\n  contractName,\n  address,\n  setRoute,\n  userProvider,\n  mainnetProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n}) {\n  const history = useHistory();\n\n  // keep track of a variable from the contract in the local React state:\n  const nonce = useContractReader(readContracts, contractName, \"nonce\");\n  const calldataInputRef = useRef(\"0x\");\n\n  console.log(\"🤗 nonce:\", nonce);\n\n  console.log(\"price\", price);\n\n  const [customNonce, setCustomNonce] = useState();\n  const [to, setTo] = useLocalStorage(\"to\");\n  const [amount, setAmount] = useLocalStorage(\"amount\", \"0\");\n  const [data, setData] = useLocalStorage(\"data\", \"0x\");\n  const [isCreateTxnEnabled, setCreateTxnEnabled] = useState(true);\n  const [decodedDataState, setDecodedData] = useState();\n  const [methodName, setMethodName] = useState();\n  const [selectDisabled, setSelectDisabled] = useState(false);\n  let decodedData = \"\";\n\n  const [result, setResult] = useState();\n\n  const inputStyle = {\n    padding: 10,\n  };\n  let decodedDataObject = \"\";\n  useEffect(() => {\n    const inputTimer = setTimeout(async () => {\n      console.log(\"EFFECT RUNNING\");\n      try {\n        // if(methodName == \"transferFunds\"){\n        //   console.log(\"Send transaction selected\")\n        //   console.log(\"🔥🔥🔥🔥🔥🔥\",amount)\n        //     const calldata = readContracts[contractName].interface.encodeFunctionData(\"transferFunds\",[to,parseEther(\"\" + parseFloat(amount).toFixed(12))])\n        //     setData(calldata);\n        // }\n        // decodedDataObject = readContracts ? await readContracts[contractName].interface.parseTransaction({ data }) : \"\";\n        // console.log(\"decodedDataObject\", decodedDataObject);\n        // setCreateTxnEnabled(true);\n        if(decodedDataObject.signature === \"addSigner(address,uint256)\"){\n          setMethodName(\"addSigner\")\n          setSelectDisabled(true)\n        } else if (decodedDataObject.signature === \"removeSigner(address,uint256)\"){\n          setMethodName(\"removeSigner\")\n          setSelectDisabled(true)\n        }\n        decodedData = (\n          <div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"left\",\n                marginTop: 16,\n                marginBottom: 16,\n              }}\n            >\n              {decodedDataObject && decodedDataObject.signature && <b>Function Signature : </b>}\n              {decodedDataObject.signature}\n            </div>\n            {decodedDataObject.functionFragment &&\n              decodedDataObject.functionFragment.inputs.map((element, index) => {\n                if (element.type === \"address\") {\n                  return (\n                    <div\n                      style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"left\" }}\n                    >\n                      <b>{element.name} :&nbsp;</b>\n                      <Address fontSize={16} address={decodedDataObject.args[index]} ensProvider={mainnetProvider} />\n                    </div>\n                  );\n                }\n                if (element.type === \"uint256\") {\n                  return (\n                    <p style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", justifyContent: \"left\" }}>\n                  {element.name === \"value\" ? <><b>{element.name} : </b> <Balance fontSize={16} balance={decodedDataObject.args[index]} dollarMultiplier={price} /> </> : <><b>{element.name} : </b> {decodedDataObject.args[index] && decodedDataObject.args[index].toNumber()}</>}\n                    </p>\n                  );\n                }\n              })}\n          </div>\n        );\n        setDecodedData(decodedData);\n        setCreateTxnEnabled(true);\n        setResult();\n\n      } catch (error) {\n\n        console.log(\"mistake: \",error);\n        if(data!== \"0x\") setResult(\"ERROR: Invalid calldata\");\n        setCreateTxnEnabled(false);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(inputTimer);\n    };\n  }, [data, decodedData, amount]);\n\n  let resultDisplay;\n  if (result) {\n    if (result.indexOf(\"ERROR\") >= 0) {\n      resultDisplay = <div style={{ margin: 16, padding: 8, color: \"red\" }}>{result}</div>;\n    } else {\n      resultDisplay = (\n        <div style={{ margin: 16, padding: 8 }}>\n          <Blockie size={4} scale={8} address={result} /> Tx {result.substr(0, 6)} Created!\n          <div style={{ margin: 8, padding: 4 }}>\n            <Spin />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\n        <div style={{ margin: 8 }}>\n          <div style={inputStyle}>\n            <Input\n              prefix=\"#\"\n              disabled\n              value={customNonce}\n              placeholder={\"\" + (nonce ? nonce.toNumber() : \"loading...\")}\n              onChange={setCustomNonce}\n            />\n          </div>\n                  <div style={{margin:8,padding:8}}>\n          <Select value={methodName} disabled={selectDisabled} style={{ width: \"100%\" }} onChange={ setMethodName }>\n            //<Option key=\"transferFunds\">transferFunds()</Option>\n            <Option disabled={true} key=\"addSigner\">addSigner()</Option>\n            <Option disabled={true} key=\"removeSigner\">removeSigner()</Option>\n          </Select>\n        </div>\n          <div style={inputStyle}>\n            <AddressInput\n              autoFocus\n              ensProvider={mainnetProvider}\n              placeholder=\"to address\"\n              value={to}\n              onChange={setTo}\n            />\n          </div>\n\n          {!selectDisabled && <div style={inputStyle}>\n            <EtherInput price={price} mode=\"USD\" value={amount} onChange={setAmount} />\n          </div>}\n          <div style={inputStyle}>\n            <Input\n              placeholder=\"calldata\"\n              value={data}\n              onChange={e => {\n                setData(e.target.value);\n              }}\n              ref={calldataInputRef}\n            />\n            {decodedDataState}\n          </div>\n\n          <Button\n            style={{ marginTop: 32 }}\n            disabled={!isCreateTxnEnabled}\n            onClick={async () => {\n              // setData(calldataInputRef.current.state.value)\n              // if (data && data == \"0x\") {\n              //   setResult(\"ERROR, Call Data Invalid\");\n              //   return;\n              // }\n              console.log(\"customNonce\", customNonce);\n              const nonce = customNonce || (await readContracts[contractName].nonce());\n              console.log(\"nonce\", nonce);\n\n              const newHash = await readContracts[contractName].getTransactionHash(\n                nonce,\n                to,\n                parseEther(\"\" + parseFloat(amount).toFixed(12)),\n                data,\n              );\n              console.log(\"newHash\", newHash);\n\n              const signature = await userProvider.send(\"personal_sign\", [newHash, address]);\n              console.log(\"signature\", signature);\n\n              const recover = await readContracts[contractName].recover(newHash, signature);\n              console.log(\"recover\", recover);\n\n              const isOwner = await readContracts[contractName].isOwner(recover);\n              console.log(\"isOwner\", isOwner);\n\n              if (isOwner) {\n                const res = await axios.post(poolServerUrl, {\n                  chainId: localProvider._network.chainId,\n                  address: readContracts[contractName].address,\n                  nonce: nonce.toNumber(),\n                  to,\n                  amount,\n                  data,\n                  hash: newHash,\n                  signatures: [signature],\n                  signers: [recover],\n                });\n                // IF SIG IS VALUE ETC END TO SERVER AND SERVER VERIFIES SIG IS RIGHT AND IS SIGNER BEFORE ADDING TY\n\n                console.log(\"RESULT\", res.data);\n\n                setTimeout(() => {\n                  history.push(\"/pool\");\n                }, 2777);\n\n                setResult(res.data.hash);\n                setTo();\n                setAmount(\"0\");\n                setData(\"0x\");\n              } else {\n                console.log(\"ERROR, NOT OWNER.\");\n                setResult(\"ERROR, NOT OWNER.\");\n              }\n            }}\n          >\n            Create\n          </Button>\n        </div>\n\n        {resultDisplay}\n      </div>\n    </div>\n  );\n}\n\nfunction useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}"]},"metadata":{},"sourceType":"module"}