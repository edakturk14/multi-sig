{"ast":null,"code":"var _jsxFileName = \"/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/components/TransactionListItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, List } from \"antd\";\nimport { Address, Balance, Blockie, TransactionDetailsModal } from \"../components\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TransactionListItem = function ({\n  item,\n  mainnetProvider,\n  blockExplorer,\n  price,\n  readContracts,\n  contractName,\n  children\n}) {\n  _s();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [txnInfo, setTxnInfo] = useState(null);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  console.log(\"ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥\", item);\n  let txnData;\n\n  try {\n    txnData = readContracts[contractName].interface.parseTransaction(item);\n  } catch (error) {\n    console.log(\"ERROR\", error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TransactionDetailsModal, {\n      visible: isModalVisible,\n      txnInfo: txnData,\n      handleOk: handleOk,\n      mainnetProvider: mainnetProvider,\n      price: price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), txnData && /*#__PURE__*/_jsxDEV(List.Item, {\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 55,\n          fontSize: 12,\n          opacity: 0.5,\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"90%\",\n          justifyContent: \"space-between\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Event Name :\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), txnData.functionFragment.name, \"\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Addressed to :\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), txnData.args[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        style: {\n          padding: 16\n        },\n        children: [\"#\", typeof item.nonce === \"number\" ? item.nonce : item.nonce.toNumber()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(Blockie, {\n          size: 4,\n          scale: 8,\n          address: item.hash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), \" \", item.hash.substr(0, 6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Address, {\n        address: item.to,\n        ensProvider: mainnetProvider,\n        blockExplorer: blockExplorer,\n        fontSize: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Balance, {\n        balance: item.value ? item.value : parseEther(\"\" + parseFloat(item.amount).toFixed(12)),\n        dollarMultiplier: price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: children\n      }, void 0, false), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: showModal,\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, item.hash, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TransactionListItem, \"8Q3GhZlpSNpFlc+kqHPhaqjYDDk=\");\n\n_c = TransactionListItem;\nexport default TransactionListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionListItem\");","map":{"version":3,"sources":["/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/components/TransactionListItem.jsx"],"names":["React","useState","Button","List","Address","Balance","Blockie","TransactionDetailsModal","EllipsisOutlined","parseEther","formatEther","TransactionListItem","item","mainnetProvider","blockExplorer","price","readContracts","contractName","children","isModalVisible","setIsModalVisible","txnInfo","setTxnInfo","showModal","handleOk","console","log","txnData","interface","parseTransaction","error","position","top","fontSize","opacity","display","flexDirection","width","justifyContent","functionFragment","name","args","padding","nonce","toNumber","hash","substr","to","value","parseFloat","amount","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AAEA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,OAA3B,EAAoCC,uBAApC,QAAmE,eAAnE;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,sBAAxC;;;;AAEA,MAAMC,mBAAmB,GAAG,UAAU;AAACC,EAAAA,IAAD;AAAOC,EAAAA,eAAP;AAAwBC,EAAAA,aAAxB;AAAuCC,EAAAA,KAAvC;AAA8CC,EAAAA,aAA9C;AAA6DC,EAAAA,YAA7D;AAA2EC,EAAAA;AAA3E,CAAV,EAAgG;AAAA;;AAC1H,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMsB,SAAS,GAAG,MAAM;AACtBH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFD;;AAIA,QAAMI,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAFD;;AAKAK,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBd,IAAxB;AACA,MAAIe,OAAJ;;AACA,MAAI;AACFA,IAAAA,OAAO,GAAGX,aAAa,CAACC,YAAD,CAAb,CAA4BW,SAA5B,CAAsCC,gBAAtC,CAAuDjB,IAAvD,CAAV;AACD,GAFD,CAEE,OAAOkB,KAAP,EAAa;AACbL,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,KAArB;AACD;;AACD,sBAAO;AAAA,4BACL,QAAC,uBAAD;AACE,MAAA,OAAO,EAAEX,cADX;AAEE,MAAA,OAAO,EAAEQ,OAFX;AAGE,MAAA,QAAQ,EAAEH,QAHZ;AAIE,MAAA,eAAe,EAAEX,eAJnB;AAKE,MAAA,KAAK,EAAEE;AALT;AAAA;AAAA;AAAA;AAAA,YADK,EAQJY,OAAO,iBAAI,QAAC,IAAD,CAAM,IAAN;AAA2B,MAAA,KAAK,EAAE;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAAlC;AAAA,8BACV;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,QAAQ,EAAE,UADL;AAELC,UAAAA,GAAG,EAAE,EAFA;AAGLC,UAAAA,QAAQ,EAAE,EAHL;AAILC,UAAAA,OAAO,EAAE,GAJJ;AAKLC,UAAAA,OAAO,EAAE,MALJ;AAMLC,UAAAA,aAAa,EAAE,KANV;AAOLC,UAAAA,KAAK,EAAE,KAPF;AAQLC,UAAAA,cAAc,EAAE;AARX,SADT;AAAA,gCAYE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGX,OAAO,CAACY,gBAAR,CAAyBC,IAF5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAgBE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGb,OAAO,CAACc,IAAR,CAAa,CAAb,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,eAsBT;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAV;AAAA,wBAA6B,OAAO9B,IAAI,CAAC+B,KAAZ,KAAsB,QAAtB,GAAiC/B,IAAI,CAAC+B,KAAtC,GAA8C/B,IAAI,CAAC+B,KAAL,CAAWC,QAAX,EAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBS,eAuBV;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAE,CAAf;AAAkB,UAAA,KAAK,EAAE,CAAzB;AAA4B,UAAA,OAAO,EAAEhC,IAAI,CAACiC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF,OACsDjC,IAAI,CAACiC,IAAL,CAAUC,MAAV,CAAiB,CAAjB,EAAoB,CAApB,CADtD;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBU,eA0BV,QAAC,OAAD;AAAS,QAAA,OAAO,EAAElC,IAAI,CAACmC,EAAvB;AAA2B,QAAA,WAAW,EAAElC,eAAxC;AAAyD,QAAA,aAAa,EAAEC,aAAxE;AAAuF,QAAA,QAAQ,EAAE;AAAjG;AAAA;AAAA;AAAA;AAAA,cA1BU,eA2BV,QAAC,OAAD;AAAS,QAAA,OAAO,EAAEF,IAAI,CAACoC,KAAL,GAAapC,IAAI,CAACoC,KAAlB,GAA0BvC,UAAU,CAAC,KAAKwC,UAAU,CAACrC,IAAI,CAACsC,MAAN,CAAV,CAAwBC,OAAxB,CAAgC,EAAhC,CAAN,CAAtD;AAAkG,QAAA,gBAAgB,EAAEpC;AAApH;AAAA;AAAA;AAAA;AAAA,cA3BU,eA4BV;AAAA,kBAEIG;AAFJ,uBA5BU,eAiCV,QAAC,MAAD;AACE,QAAA,OAAO,EAAEK,SADX;AAAA,+BAGE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cAjCU;AAAA,OAAgBX,IAAI,CAACiC,IAArB;AAAA;AAAA;AAAA;AAAA,YARP;AAAA,kBAAP;AAiDD,CArED;;GAAMlC,mB;;KAAAA,mB;AAsEN,eAAeA,mBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, List } from \"antd\";\n\nimport { Address, Balance, Blockie, TransactionDetailsModal } from \"../components\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { parseEther, formatEther } from \"@ethersproject/units\";\n\nconst TransactionListItem = function ({item, mainnetProvider, blockExplorer, price, readContracts, contractName, children}) {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [txnInfo, setTxnInfo] = useState(null);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n\n  console.log(\"ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥\", item)\n  let txnData;\n  try {\n    txnData = readContracts[contractName].interface.parseTransaction(item);\n  } catch (error){\n    console.log(\"ERROR\", error)\n  }\n  return <>\n    <TransactionDetailsModal\n      visible={isModalVisible}\n      txnInfo={txnData}\n      handleOk={handleOk}\n      mainnetProvider={mainnetProvider}\n      price={price}\n    />\n    {txnData && <List.Item key={item.hash} style={{ position: \"relative\" }}>\n      <div\n        style={{\n          position: \"absolute\",\n          top: 55,\n          fontSize: 12,\n          opacity: 0.5,\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"90%\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <p>\n          <b>Event Name :&nbsp;</b>\n          {txnData.functionFragment.name}&nbsp;\n        </p>\n        <p>\n          <b>Addressed to :&nbsp;</b>\n          {txnData.args[0]}\n        </p>\n      </div>\n      {<b style={{ padding: 16 }}>#{typeof(item.nonce)=== \"number\" ? item.nonce : item.nonce.toNumber()}</b>}\n      <span>\n        <Blockie size={4} scale={8} address={item.hash} /> {item.hash.substr(0, 6)}\n      </span>\n      <Address address={item.to} ensProvider={mainnetProvider} blockExplorer={blockExplorer} fontSize={16} />\n      <Balance balance={item.value ? item.value : parseEther(\"\" + parseFloat(item.amount).toFixed(12))} dollarMultiplier={price} />\n      <>\n        {\n          children\n        }\n      </>\n      <Button\n        onClick={showModal}\n      >\n        <EllipsisOutlined />\n      </Button>\n      \n    </List.Item>}\n    </>\n};\nexport default TransactionListItem;"]},"metadata":{},"sourceType":"module"}