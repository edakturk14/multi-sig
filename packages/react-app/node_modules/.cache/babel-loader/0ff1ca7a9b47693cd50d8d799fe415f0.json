{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock, args) {\n  _s();\n\n  const [updates, setUpdates] = useState([]);\n  useEffect(() => {\n    if (contracts && contractName && contracts[contractName]) {\n      try {\n        contracts[contractName].on(eventName, (...args) => {\n          let blockNumber = args[args.length - 1].blockNumber;\n          setUpdates(messages => [Object.assign({\n            blockNumber\n          }, args.pop().args), ...messages]);\n        });\n        return () => {\n          contracts[contractName].removeListener(eventName);\n        };\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [provider, startBlock, contracts, contractName, eventName]);\n  return updates;\n}\n\n_s(useEventListener, \"fVrOiUJT6HOXWZMzGi+YrfallHw=\");","map":{"version":3,"sources":["/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/hooks/EventListener.js"],"names":["useState","useEffect","useEventListener","contracts","contractName","eventName","provider","startBlock","args","updates","setUpdates","on","blockNumber","length","messages","Object","assign","pop","removeListener","e","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,YAArC,EAAmDC,SAAnD,EAA8DC,QAA9D,EAAwEC,UAAxE,EAAoFC,IAApF,EAA0F;AAAA;;AACvG,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,SAAS,IAAIC,YAAb,IAA6BD,SAAS,CAACC,YAAD,CAA1C,EAA0D;AACxD,UAAI;AACFD,QAAAA,SAAS,CAACC,YAAD,CAAT,CAAwBO,EAAxB,CAA2BN,SAA3B,EAAsC,CAAC,GAAGG,IAAJ,KAAa;AACjD,cAAII,WAAW,GAAGJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAY,CAAb,CAAJ,CAAoBD,WAAtC;AACAF,UAAAA,UAAU,CAACI,QAAQ,IAAI,CAACC,MAAM,CAACC,MAAP,CAAc;AAACJ,YAAAA;AAAD,WAAd,EAA4BJ,IAAI,CAACS,GAAL,GAAWT,IAAvC,CAAD,EAA+C,GAAGM,QAAlD,CAAb,CAAV;AACD,SAHD;AAIA,eAAO,MAAM;AACXX,UAAAA,SAAS,CAACC,YAAD,CAAT,CAAwBc,cAAxB,CAAuCb,SAAvC;AACD,SAFD;AAGD,OARD,CAQE,OAAOc,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF;AACF,GAdQ,EAcN,CAACb,QAAD,EAAWC,UAAX,EAAuBJ,SAAvB,EAAkCC,YAAlC,EAAgDC,SAAhD,CAdM,CAAT;AAgBA,SAAOI,OAAP;AACD;;GApBuBP,gB","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useEventListener(contracts, contractName, eventName, provider, startBlock, args) {\n  const [updates, setUpdates] = useState([]);\n\n  useEffect(() => {\n    if (contracts && contractName && contracts[contractName]) {\n      try {\n        contracts[contractName].on(eventName, (...args) => {\n          let blockNumber = args[args.length-1].blockNumber\n          setUpdates(messages => [Object.assign({blockNumber},args.pop().args), ...messages]);\n        });\n        return () => {\n          contracts[contractName].removeListener(eventName);\n        };\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, [provider, startBlock, contracts, contractName, eventName]);\n\n  return updates;\n}\n"]},"metadata":{},"sourceType":"module"}