{"ast":null,"code":"var _jsxFileName = \"/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch, NetworkDisplay, FaucetHint, NetworkSwitch } from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\"; // contracts\n\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, ExampleUI, Hints, Owners, CreateTransaction, Transactions } from \"./views\";\nimport { useStaticJsonRPC, useEventListener, useUserProvider } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst initialNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true;\nconst USE_BURNER_WALLET = true; // toggle burner wallet feature\n\nconst USE_NETWORK_SELECTOR = false;\nconst web3Modal = Web3ModalSetup(); // üõ∞ providers\n\nconst providers = [\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\", `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`, \"https://rpc.scaffoldeth.io:48544\"];\n\nfunction App(props) {\n  _s();\n\n  // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n  // reference './constants.js' for other networks\n  const networkOptions = [initialNetwork.name, \"mainnet\", \"rinkeby\"];\n  const ContractName = \"MultiSig\";\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n  const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n  const location = useLocation();\n  const targetNetwork = NETWORKS[selectedNetwork]; // üî≠ block explorer URL\n\n  const blockExplorer = targetNetwork.blockExplorer; // load all your providers\n\n  const localProvider = useStaticJsonRPC([process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl]);\n  const mainnetProvider = useStaticJsonRPC(providers);\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  if (DEBUG) console.log(`Using ${selectedNetwork} network`); // üõ∞ providers\n\n  if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n  const userSigner = userProviderAndSigner.signer;\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address); // const contractConfig = useContractConfig();\n\n  const contractConfig = {\n    deployedContracts: deployedContracts || {},\n    externalContracts: externalContracts || {}\n  }; // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider, contractConfig); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const signaturesRequired = useContractReader(readContracts, ContractName, \"signaturesRequired\");\n  const ownerEvents = useEventListener(readContracts, ContractName, \"Owner\", localProvider, 1);\n  const nonce = useContractReader(readContracts, ContractName, \"nonce\");\n  const owners = useContractReader(readContracts, ContractName, \"allOwners\");\n  console.log(\"******\"); // const poolServerUrl = \"https://backend.multisig.holdings:49832/\"\n\n  const poolServerUrl = \"http://localhost:49832/\";\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts, localChainId, myMainnetDAIBalance]);\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    }); // eslint-disable-next-line\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NetworkDisplay, {\n      NETWORKCHECK: NETWORKCHECK,\n      localChainId: localChainId,\n      selectedChainId: selectedChainId,\n      targetNetwork: targetNetwork,\n      logoutOfWeb3Modal: logoutOfWeb3Modal,\n      USE_NETWORK_SELECTOR: USE_NETWORK_SELECTOR\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      style: {\n        textAlign: \"center\",\n        marginTop: 40\n      },\n      selectedKeys: [location.pathname],\n      mode: \"horizontal\",\n      children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => {\n            setRoute(\"/\");\n          },\n          to: \"/\",\n          children: \"MultiSig\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)\n      }, \"/\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => {\n            setRoute(\"/debug\");\n          },\n          to: \"/debug\",\n          children: \"Debug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, \"/debug\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => {\n            setRoute(\"/owners\");\n          },\n          to: \"/owners\",\n          children: \"Owners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, \"/owners\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => {\n            setRoute(\"/create\");\n          },\n          to: \"/create\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, \"/create\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => {\n            setRoute(\"/pool\");\n          },\n          to: \"/pool\",\n          children: \"Pool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, \"/pool\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          yourLocalBalance: yourLocalBalance,\n          readContracts: readContracts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/debug\",\n        children: /*#__PURE__*/_jsxDEV(Contract, {\n          name: ContractName,\n          price: price,\n          signer: userSigner,\n          provider: localProvider,\n          address: address,\n          blockExplorer: blockExplorer,\n          contractConfig: contractConfig\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/owners\",\n        children: /*#__PURE__*/_jsxDEV(Owners, {\n          owners: owners,\n          contractName: ContractName,\n          address: address,\n          userProvider: userProvider,\n          mainnetProvider: mainnetProvider,\n          localProvider: localProvider,\n          yourLocalBalance: yourLocalBalance,\n          price: price,\n          tx: tx,\n          writeContracts: writeContracts,\n          readContracts: readContracts,\n          blockExplorer: blockExplorer,\n          nonce: nonce,\n          ownerEvents: ownerEvents,\n          signaturesRequired: signaturesRequired\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\"\n        },\n        children: [USE_NETWORK_SELECTOR && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(NetworkSwitch, {\n            networkOptions: networkOptions,\n            selectedNetwork: selectedNetwork,\n            setSelectedNetwork: setSelectedNetwork\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Account, {\n          useBurner: USE_BURNER_WALLET,\n          address: address,\n          localProvider: localProvider,\n          userSigner: userSigner,\n          mainnetProvider: mainnetProvider,\n          price: price,\n          web3Modal: web3Modal,\n          loadWeb3Modal: loadWeb3Modal,\n          logoutOfWeb3Modal: logoutOfWeb3Modal,\n          blockExplorer: blockExplorer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && /*#__PURE__*/_jsxDEV(FaucetHint, {\n        localProvider: localProvider,\n        targetNetwork: targetNetwork,\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 19\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"AvHBiWeJxhmDZLCw7vFsI+DJZSE=\", false, function () {\n  return [useLocation, useStaticJsonRPC, useStaticJsonRPC, useUserProvider, useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useContractReader, useEventListener, useContractReader, useContractReader];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/App.jsx"],"names":["Button","Col","Menu","Row","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","React","useCallback","useEffect","useState","Link","Route","Switch","useLocation","Account","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","NetworkDisplay","FaucetHint","NetworkSwitch","NETWORKS","ALCHEMY_KEY","externalContracts","deployedContracts","Transactor","Web3ModalSetup","Home","ExampleUI","Hints","Owners","CreateTransaction","Transactions","useStaticJsonRPC","useEventListener","useUserProvider","ethers","require","initialNetwork","localhost","DEBUG","NETWORKCHECK","USE_BURNER_WALLET","USE_NETWORK_SELECTOR","web3Modal","providers","App","props","networkOptions","name","ContractName","injectedProvider","setInjectedProvider","address","setAddress","selectedNetwork","setSelectedNetwork","location","targetNetwork","blockExplorer","localProvider","process","env","REACT_APP_PROVIDER","rpcUrl","mainnetProvider","userProvider","console","log","logoutOfWeb3Modal","clearCachedProvider","provider","disconnect","setTimeout","window","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","_network","chainId","selectedChainId","tx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","signaturesRequired","ownerEvents","nonce","owners","poolServerUrl","utils","formatEther","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetAvailable","connection","indexOf","textAlign","marginTop","position","right","top","padding","display","flex","alignItems","marginRight","lte","BigNumber","from","left","bottom","opacity","open"],"mappings":"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","sourcesContent":["import { Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport \"./App.css\";\nimport {\n  Account,\n  Contract,\n  Faucet,\n  GasGauge,\n  Header,\n  Ramp,\n  ThemeSwitch,\n  NetworkDisplay,\n  FaucetHint,\n  NetworkSwitch,\n} from \"./components\";\nimport { NETWORKS, ALCHEMY_KEY } from \"./constants\";\nimport externalContracts from \"./contracts/external_contracts\";\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport { Transactor, Web3ModalSetup } from \"./helpers\";\nimport { Home, ExampleUI, Hints, Owners, CreateTransaction,  Transactions } from \"./views\";\nimport { useStaticJsonRPC, useEventListener, useUserProvider } from \"./hooks\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Alchemy.com & Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n  /// üì° What chain are your contracts deployed to?\n  const initialNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n  // üò¨ Sorry for all the console logging\n  const DEBUG = true;\n  const NETWORKCHECK = true;\n  const USE_BURNER_WALLET = true; // toggle burner wallet feature\n  const USE_NETWORK_SELECTOR = false;\n\n  const web3Modal = Web3ModalSetup();\n\n  // üõ∞ providers\n  const providers = [\n    \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n    `https://eth-mainnet.alchemyapi.io/v2/${ALCHEMY_KEY}`,\n    \"https://rpc.scaffoldeth.io:48544\",\n  ];\n\nfunction App(props) {\n    // specify all the chains your app is available on. Eg: ['localhost', 'mainnet', ...otherNetworks ]\n    // reference './constants.js' for other networks\n    const networkOptions = [initialNetwork.name, \"mainnet\", \"rinkeby\"];\n    const ContractName = \"MultiSig\";\n\n    const [injectedProvider, setInjectedProvider] = useState();\n    const [address, setAddress] = useState();\n    const [selectedNetwork, setSelectedNetwork] = useState(networkOptions[0]);\n    const location = useLocation();\n\n    const targetNetwork = NETWORKS[selectedNetwork];\n\n    // üî≠ block explorer URL\n    const blockExplorer = targetNetwork.blockExplorer;\n\n    // load all your providers\n    const localProvider = useStaticJsonRPC([\n      process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : targetNetwork.rpcUrl,\n    ]);\n    const mainnetProvider = useStaticJsonRPC(providers);\n    const userProvider = useUserProvider(injectedProvider, localProvider);\n\n\n    if (DEBUG) console.log(`Using ${selectedNetwork} network`);\n\n    // üõ∞ providers\n    if (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n\n    const logoutOfWeb3Modal = async () => {\n      await web3Modal.clearCachedProvider();\n      if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n        await injectedProvider.provider.disconnect();\n      }\n      setTimeout(() => {\n        window.location.reload();\n      }, 1);\n    };\n\n    /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n    const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n    /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n    const gasPrice = useGasPrice(targetNetwork, \"fast\");\n    // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n    const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider, USE_BURNER_WALLET);\n    const userSigner = userProviderAndSigner.signer;\n\n    useEffect(() => {\n      async function getAddress() {\n        if (userSigner) {\n          const newAddress = await userSigner.getAddress();\n          setAddress(newAddress);\n        }\n      }\n      getAddress();\n    }, [userSigner]);\n\n    // You can warn the user if you would like them to be on a specific network\n    const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n    const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n    // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n    // The transactor wraps transactions and provides notificiations\n    const tx = Transactor(userSigner, gasPrice);\n\n    // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n    const yourLocalBalance = useBalance(localProvider, address);\n\n    // Just plug in different üõ∞ providers to get your balance on different chains:\n    const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n    // const contractConfig = useContractConfig();\n    const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n    // Load in your local üìù contract and read a value from it:\n    const readContracts = useContractLoader(localProvider, contractConfig);\n\n    // If you want to make üîê write transactions to your contracts, use the userSigner:\n    const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n    // EXTERNAL CONTRACT EXAMPLE:\n    //\n    // If you want to bring in the mainnet DAI contract it would look like:\n    const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n    // If you want to call a function on a new block\n    useOnBlock(mainnetProvider, () => {\n      console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n    });\n\n    // Then read your DAI balance like:\n    const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n      \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n    ]);\n\n    // keep track of a variable from the contract in the local React state:\n    const signaturesRequired = useContractReader(readContracts, ContractName, \"signaturesRequired\");\n    const ownerEvents = useEventListener(readContracts, ContractName, \"Owner\", localProvider, 1);\n    const nonce = useContractReader(readContracts, ContractName, \"nonce\");\n    const owners = useContractReader(readContracts, ContractName, \"allOwners\");\n\n    console.log(\"******\");\n    // const poolServerUrl = \"https://backend.multisig.holdings:49832/\"\n    const poolServerUrl = \"http://localhost:49832/\"\n\n    useEffect(() => {\n      if (\n        DEBUG &&\n        mainnetProvider &&\n        address &&\n        selectedChainId &&\n        yourLocalBalance &&\n        yourMainnetBalance &&\n        readContracts &&\n        writeContracts &&\n        mainnetContracts\n      ) {\n        console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n        console.log(\"üåé mainnetProvider\", mainnetProvider);\n        console.log(\"üè† localChainId\", localChainId);\n        console.log(\"üë©‚Äçüíº selected address:\", address);\n        console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n        console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n        console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n        console.log(\"üìù readContracts\", readContracts);\n        console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n        console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n        console.log(\"üîê writeContracts\", writeContracts);\n      }\n    }, [\n      mainnetProvider,\n      address,\n      selectedChainId,\n      yourLocalBalance,\n      yourMainnetBalance,\n      readContracts,\n      writeContracts,\n      mainnetContracts,\n      localChainId,\n      myMainnetDAIBalance,\n    ]);\n\n    const loadWeb3Modal = useCallback(async () => {\n      const provider = await web3Modal.connect();\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n      provider.on(\"chainChanged\", chainId => {\n        console.log(`chain changed to ${chainId}! updating providers`);\n        setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n    // eslint-disable-next-line\n    }, [setInjectedProvider]);\n\n    useEffect(() => {\n      if (web3Modal.cachedProvider) {\n        loadWeb3Modal();\n      }\n    }, [loadWeb3Modal]);\n\n    const [route, setRoute] = useState();\n    useEffect(() => {\n      setRoute(window.location.pathname)\n    }, [setRoute]);\n\n    const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n    return (\n      <div className=\"App\">\n        {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n        <Header />\n        <NetworkDisplay\n          NETWORKCHECK={NETWORKCHECK}\n          localChainId={localChainId}\n          selectedChainId={selectedChainId}\n          targetNetwork={targetNetwork}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          USE_NETWORK_SELECTOR={USE_NETWORK_SELECTOR}\n        />\n        <Menu style={{ textAlign: \"center\", marginTop: 40 }} selectedKeys={[location.pathname]} mode=\"horizontal\">\n          \n          <Menu.Item key=\"/\">\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">MultiSig</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"/debug\">\n            <Link onClick={()=>{setRoute(\"/debug\")}} to=\"/debug\">Debug</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"/owners\">\n          <Link onClick={()=>{setRoute(\"/owners\")}} to=\"/owners\">Owners</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"/create\">\n          <Link onClick={()=>{setRoute(\"/create\")}} to=\"/create\">Create</Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"/pool\">\n          <Link onClick={()=>{setRoute(\"/pool\")}} to=\"/pool\">Pool</Link>\n          </Menu.Item>\n\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/* pass in any web3 props to this Home component. For example, yourLocalBalance */}\n            <Home yourLocalBalance={yourLocalBalance} readContracts={readContracts} />\n          </Route>\n          <Route exact path=\"/debug\">\n            <Contract\n              name={ContractName}\n              price={price}\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n          </Route>\n\n\n          <Route exact path=\"/owners\">\n              <Owners\n                owners={owners}\n                contractName={ContractName}\n                address={address}\n                userProvider={userProvider}\n                mainnetProvider={mainnetProvider}\n                localProvider={localProvider}\n                yourLocalBalance={yourLocalBalance}\n                price={price}\n                tx={tx}\n                writeContracts={writeContracts}\n                readContracts={readContracts}\n                blockExplorer={blockExplorer}\n                nonce={nonce}\n                ownerEvents={ownerEvents}\n                signaturesRequired={signaturesRequired}\n              />\n            </Route>\n\n        </Switch>\n\n        <ThemeSwitch />\n\n        {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n        <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n          <div style={{ display: \"flex\", flex: 1, alignItems: \"center\" }}>\n            {USE_NETWORK_SELECTOR && (\n              <div style={{ marginRight: 20 }}>\n                <NetworkSwitch\n                  networkOptions={networkOptions}\n                  selectedNetwork={selectedNetwork}\n                  setSelectedNetwork={setSelectedNetwork}\n                />\n              </div>\n            )}\n            <Account\n              useBurner={USE_BURNER_WALLET}\n              address={address}\n              localProvider={localProvider}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              price={price}\n              web3Modal={web3Modal}\n              loadWeb3Modal={loadWeb3Modal}\n              logoutOfWeb3Modal={logoutOfWeb3Modal}\n              blockExplorer={blockExplorer}\n            />\n          </div>\n          {yourLocalBalance.lte(ethers.BigNumber.from(\"0\")) && (\n            <FaucetHint localProvider={localProvider} targetNetwork={targetNetwork} address={address} />\n          )}\n        </div>\n\n        {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n        <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={8}>\n              <Ramp price={price} address={address} networks={NETWORKS} />\n            </Col>\n\n            <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n              <GasGauge gasPrice={gasPrice} />\n            </Col>\n            <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n              <Button\n                onClick={() => {\n                  window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n                }}\n                size=\"large\"\n                shape=\"round\"\n              >\n                <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                  üí¨\n                </span>\n                Support\n              </Button>\n            </Col>\n          </Row>\n\n          <Row align=\"middle\" gutter={[4, 4]}>\n            <Col span={24}>\n              {\n                /*  if the local provider has a signer, let's show the faucet:  */\n                faucetAvailable ? (\n                  <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n                ) : (\n                  \"\"\n                )\n              }\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}