{"ast":null,"code":"import { ethers } from \"ethers\";\n\nconst axios = require(\"axios\");\n\nexport default async function parseExternalContractTransaction(contractAddress, txData) {\n  console.log(\"PARSE\", contractAddress, txData);\n\n  try {\n    let response = await axios.get('https://api.etherscan.io/api', {\n      params: {\n        module: 'contract',\n        action: 'getabi',\n        address: contractAddress,\n        apikey: \"PJPKDC3BEBJQJVDEPCU5KAIA7WIV8IWQ51\"\n      }\n    });\n\n    const getParsedTransaction = async () => {\n      var _response$data;\n\n      const abi = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.result;\n\n      if (abi && txData && txData !== \"\") {\n        const iface = new ethers.utils.Interface(JSON.parse(abi));\n        return iface.parseTransaction({\n          data: txData\n        });\n      }\n    };\n\n    return await getParsedTransaction(response);\n  } catch (error) {\n    console.log(\"parseExternalContractTransaction error:\", error);\n  }\n}\n;","map":{"version":3,"sources":["/Users/edaakturk/Desktop/multi-sig-challenge/packages/react-app/src/helpers/parseExternalContractTransaction.js"],"names":["ethers","axios","require","parseExternalContractTransaction","contractAddress","txData","console","log","response","get","params","module","action","address","apikey","getParsedTransaction","abi","data","result","iface","utils","Interface","JSON","parse","parseTransaction","error"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,eAAe,eAAeC,gCAAf,CAAgDC,eAAhD,EAAiEC,MAAjE,EAAyE;AAEtFC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,eAApB,EAAqCC,MAArC;;AACA,MAAI;AACF,QAAIG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,8BAAV,EAA0C;AAC7DC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,UADF;AAENC,QAAAA,MAAM,EAAE,QAFF;AAGNC,QAAAA,OAAO,EAAET,eAHH;AAINU,QAAAA,MAAM,EAAE;AAJF;AADqD,KAA1C,CAArB;;AASA,UAAMC,oBAAoB,GAAG,YAAY;AAAA;;AACvC,YAAMC,GAAG,GAAGR,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAES,IAAb,mDAAG,eAAgBC,MAA5B;;AACA,UAAIF,GAAG,IAAIX,MAAP,IAAiBA,MAAM,KAAK,EAAhC,EAAoC;AAClC,cAAMc,KAAK,GAAG,IAAInB,MAAM,CAACoB,KAAP,CAAaC,SAAjB,CAA2BC,IAAI,CAACC,KAAL,CAAWP,GAAX,CAA3B,CAAd;AACA,eAAOG,KAAK,CAACK,gBAAN,CAAuB;AAAEP,UAAAA,IAAI,EAAEZ;AAAR,SAAvB,CAAP;AACD;AACF,KAND;;AAQA,WAAO,MAAMU,oBAAoB,CAACP,QAAD,CAAjC;AACD,GAnBD,CAmBE,OAAOiB,KAAP,EAAc;AACdnB,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDkB,KAAvD;AACD;AACF;AAAA","sourcesContent":["import { ethers } from \"ethers\";\n\nconst axios = require(\"axios\");\n\nexport default async function parseExternalContractTransaction(contractAddress, txData) {\n\n  console.log(\"PARSE\",contractAddress, txData)\n  try {\n    let response = await axios.get('https://api.etherscan.io/api', {\n      params: {\n        module: 'contract',\n        action: 'getabi',\n        address: contractAddress,\n        apikey: \"PJPKDC3BEBJQJVDEPCU5KAIA7WIV8IWQ51\",\n      }\n    })\n\n    const getParsedTransaction = async () => {\n      const abi = response?.data?.result;\n      if (abi && txData && txData !== \"\") {\n        const iface = new ethers.utils.Interface(JSON.parse(abi));\n        return iface.parseTransaction({ data: txData });\n      }\n    }\n\n    return await getParsedTransaction(response);\n  } catch (error) {\n    console.log(\"parseExternalContractTransaction error:\", error);\n  }\n};"]},"metadata":{},"sourceType":"module"}